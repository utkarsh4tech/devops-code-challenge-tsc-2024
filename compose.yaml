services:

  server:
    container_name: server
    restart: always
    image: utkarsh4tech/cern_tsc_server:v1
    ports:
      - "8000:8000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: cern_restaurant 
      DB_USERNAME: tech_user
      DB_PASSWORD: postgres
    depends_on:
      db:
        condition: service_healthy

  client:
    container_name: client
    image: utkarsh4tech/cern_tsc_client:v1
    ports:
      - "5000:5000"
    environment:
      CERN_RESTAURANT_CLIENT_PREFIX: client 
      CERN_RESTAURANT_CLIENT_PORT: 5000
      VITE_BACKEND_URL: http://localhost:8000/ 
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: db
    restart: always
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: cern_restaurant
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: tech_user
    volumes:
    - ./database/initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 5s
